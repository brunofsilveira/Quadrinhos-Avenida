{"version":3,"sources":["Header.js","Card.js","Home.js","Detalhes.js","App.js","serviceWorker.js","index.js"],"names":["DivNav","styled","div","Header","className","to","Component","Image","img","Card","props","src","foto","alt","nome","genero","paginas","volumes","preco","toLocaleString","editora","id","Home","state","quadrinhos","loadQuadrinhos","a","navigator","onLine","firebase","collection","orderBy","onSnapshot","snapshot","docChanges","forEach","change","type","push","doc","data","map","quadrinho","filter","setState","localStorage","setItem","JSON","stringify","parse","getItem","dados","this","key","DivRow","DivCenter","DivInput","Detalhes","avaliacao_avaliador","avaliacao_comentario","avaliacao_avaliacao","avaliacoes","aviso","handleChange","e","target","name","value","handleSubmit","preventDefault","avaliacao","avaliador","comentario","db","add","erro","tempoAviso","loadAvaliacoes","params","match","setTimeout","get","then","exists","console","log","catch","error","onSubmit","onChange","htmlFor","App","basename","path","exact","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4fa4a6d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst DivNav = styled.div`\r\n  padding: 0 10px;\r\n`\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <DivNav className='nav-wrapper blue darken-4'>\r\n          <Link className='brand-logo' to='/'>Quadrinhos Avenida</Link>\r\n        </DivNav>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Image = styled.img`\r\n  height: 200px;\r\n  padding: 10px;\r\n`\r\n\r\nconst Card = props => (\r\n  <div className='col s6'>\r\n    <div className='card horizontal'>\r\n      <div className='card-image'>\r\n        <Image className='card-img-top' src={`${props.foto}`} alt='Tela' />\r\n      </div>\r\n      <div className='card-stacked'>\r\n        <div className='card-content'>\r\n          <p className='header'><b>{props.nome}</b></p>\r\n          <p>Gênero: {props.genero}</p>\r\n          <p>Páginas: {props.paginas}</p>\r\n          <p>Volumes: {props.volumes}</p>\r\n          <p>Preço de Capa: R$ {(props.preco).toLocaleString('pt-BR')}</p>\r\n          <p>Editora: {props.editora}</p>\r\n        </div>\r\n        <div className='card-action'>\r\n          <Link to={`/detalhes/${props.id}`}>Ver Detalhes</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Card","import React, { Component } from 'react'\r\n\r\nimport * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nimport Card from './Card'\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    quadrinhos: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadQuadrinhos()\r\n  }\r\n\r\n  loadQuadrinhos = async () => {\r\n    let quadrinhos = []\r\n\r\n    if (navigator.onLine) {\r\n      firebase.firestore().collection('quadrinhos').orderBy('nome').onSnapshot(snapshot => {\r\n\r\n        snapshot.docChanges().forEach(change => {\r\n\r\n          if (change.type === 'added') {\r\n            quadrinhos.push({ id: change.doc.id, ...change.doc.data() })\r\n          }\r\n\r\n          if (change.type === 'modified') {\r\n            quadrinhos = quadrinhos.map(quadrinho => quadrinho.id === change.doc.id ?\r\n              { id: change.doc.id, ...change.doc.data() }\r\n              : quadrinho)\r\n          }\r\n\r\n          if (change.type === 'removed') {\r\n            quadrinhos = quadrinhos.filter(quadrinho => quadrinho.id !== change.doc.id)\r\n          }\r\n        })\r\n        this.setState({ quadrinhos })\r\n        localStorage.setItem('quadrinhos', JSON.stringify(quadrinhos))\r\n      })\r\n    } else {\r\n      let dados = await JSON.parse(localStorage.getItem('quadrinhos'))\r\n      quadrinhos = dados\r\n      this.setState({ quadrinhos })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          {this.state.quadrinhos.map((quadrinho) => (\r\n            <Card key={quadrinho.id}\r\n              id={quadrinho.id}\r\n              editora={quadrinho.editora}\r\n              foto={quadrinho.foto}\r\n              genero={quadrinho.genero}\r\n              nome={quadrinho.nome}\r\n              paginas={quadrinho.paginas}\r\n              preco={quadrinho.preco}\r\n              volumes={quadrinho.volumes}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst DivRow = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst DivCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  height: 200px;\r\n  padding: 10px;\r\n`\r\n\r\nconst DivInput = styled.div`\r\n  input:focus {\r\n    & + label::after {\r\n      color: #0d47a1;\r\n      border-bottom: 1px solid #0d47a1;\r\n    }\r\n  }\r\n  \r\n  & .prefix.active {\r\n    color: #0d47a1;\r\n  }\r\n`\r\n\r\nexport default class Detalhes extends Component {\r\n\r\n  state = {\r\n    id: 0,\r\n    editora: '',\r\n    foto: '',\r\n    genero: '',\r\n    nome: '',\r\n    paginas: '',\r\n    preco: '',\r\n    volumes: '',\r\n    avaliacao_avaliador: '',\r\n    avaliacao_comentario: '',\r\n    avaliacao_avaliacao: '',\r\n    avaliacoes: [],\r\n    aviso: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match: { params } } = this.props\r\n\r\n    const db = firebase.firestore()\r\n\r\n    let docRef = db.collection('quadrinhos').doc(params.id);\r\n\r\n    docRef.get().then(doc => {\r\n      if (doc.exists) {\r\n        this.setState({ id: doc.id, ...doc.data() })\r\n      } else {\r\n        console.log('Erro...')\r\n      }\r\n    }).catch(function (error) {\r\n      console.log('Erro de conexão: ', error)\r\n    })\r\n\r\n    this.loadAvaliacoes()\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const avaliacao = {\r\n      avaliador: this.state.avaliacao_avaliador,\r\n      comentario: this.state.avaliacao_comentario,\r\n      avaliacao: this.state.avaliacao_avaliacao\r\n    }\r\n\r\n    const db = firebase.firestore()\r\n\r\n    try {\r\n      db.collection('quadrinhos').doc(this.state.id)\r\n        .collection('avaliacoes').add(avaliacao)\r\n      this.setState({\r\n        aviso: 'Ok! avaliação cadastrada com sucesso',\r\n        avaliacao_avaliador: '',\r\n        avaliacao_comentario: '',\r\n        avaliacao_avaliacao: ''\r\n      })\r\n    } catch (erro) {\r\n      this.setState({ aviso: 'Erro: ' + erro })\r\n    }\r\n    this.tempoAviso()\r\n  }\r\n\r\n  loadAvaliacoes = () => {\r\n    const { match: { params } } = this.props\r\n\r\n    let avaliacoes = []\r\n\r\n    firebase.firestore().collection('quadrinhos')\r\n      .doc(params.id)\r\n      .collection('avaliacoes')\r\n      .orderBy('avaliador')\r\n      .onSnapshot(snapshot => {\r\n\r\n        snapshot.docChanges().forEach(change => {\r\n\r\n          if (change.type === 'added') {\r\n            avaliacoes.push({ id: change.doc.id, ...change.doc.data() })\r\n          }\r\n\r\n          if (change.type === 'modified') {\r\n            avaliacoes = avaliacoes.map(quadrinho => quadrinho.id === change.doc.id ?\r\n              { id: change.doc.id, ...change.doc.data() }\r\n              : quadrinho)\r\n          }\r\n\r\n          if (change.type === 'removed') {\r\n            avaliacoes = avaliacoes.filter(quadrinho => quadrinho.id !== change.doc.id)\r\n          }\r\n        })\r\n        this.setState({ avaliacoes })\r\n\r\n      })\r\n  }\r\n\r\n  tempoAviso = () => {\r\n    setTimeout(() => {\r\n      this.setState({ aviso: '' })\r\n    }, 5000)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n\r\n        <div className='row'>\r\n\r\n          <div className='col s6'>\r\n\r\n            <div className='row'>\r\n              <div className='col s12'>\r\n                <div className='card horizontal'>\r\n                  <div className='card-image'>\r\n                    <Image className='card-img-top' src={`${this.state.foto}`} alt='Tela' />\r\n                  </div>\r\n                  <div className='card-stacked'>\r\n                    <div className='card-content'>\r\n                      <p className='header'><b>{this.state.nome}</b></p>\r\n                      <p>Gênero: {this.state.genero}</p>\r\n                      <p>Páginas: {this.state.paginas}</p>\r\n                      <p>Volumes: {this.state.volumes}</p>\r\n                      <p>Preço de Capa: R$ {(this.state.preco).toLocaleString('pt-BR')}</p>\r\n                      <p>Editora: {this.state.editora}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n\r\n              {\r\n                this.state.avaliacoes.map(avaliacao => {\r\n                  return <div className='col s12' key={avaliacao.id}>\r\n                    <div className='card'>\r\n                      <div className='card-content'>\r\n                        <div className='row'>\r\n                          <div className='col s10'>\r\n                            <span className='card-title left-align'>{avaliacao.avaliador}</span>\r\n                          </div>\r\n                          <div className='col s2'>\r\n                            <span className='card-title right-align'>{avaliacao.avaliacao}</span>\r\n                          </div>\r\n                        </div>\r\n                        <p>{avaliacao.comentario}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                })\r\n              }\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='col s6'>\r\n            <DivRow className='card'>\r\n              <form onSubmit={this.handleSubmit}>\r\n\r\n                <div className='row'>\r\n\r\n                  <DivInput className='input-field col s12'>\r\n                    <i className='material-icons prefix'>account_circle</i>\r\n                    <input\r\n                      id='icon_prefix'\r\n                      type='text'\r\n                      className='validate'\r\n                      name='avaliacao_avaliador'\r\n                      onChange={this.handleChange}\r\n                      value={this.state.avaliacao_avaliador}\r\n                    />\r\n                    <label htmlFor='icon_prefix'>Avaliador</label>\r\n                  </DivInput>\r\n\r\n                  <DivInput className='input-field col s12'>\r\n                    <i className='material-icons prefix'>description</i>\r\n                    <input\r\n                      id='icon_telephone'\r\n                      type='text'\r\n                      className='validate'\r\n                      name='avaliacao_comentario'\r\n                      onChange={this.handleChange}\r\n                      value={this.state.avaliacao_comentario}\r\n                    />\r\n                    <label htmlFor='icon_telephone'>Descrição</label>\r\n                  </DivInput>\r\n\r\n                  <DivInput className='input-field col s12'>\r\n                    <i className='material-icons prefix'>score</i>\r\n                    <input\r\n                      id='icon_telephone'\r\n                      type='number'\r\n                      className='comentario'\r\n                      name='avaliacao_avaliacao'\r\n                      onChange={this.handleChange}\r\n                      value={this.state.avaliacao_avaliacao}\r\n                    />\r\n                    <label htmlFor='icon_telephone'>Pontuação</label>\r\n                  </DivInput>\r\n\r\n                </div>\r\n\r\n                <DivCenter>\r\n                  <button className='btn waves-effect waves-light  blue darken-4' type='submit' name='action'>\r\n                    Enviar Avaliação\r\n                  <i className='material-icons right'>send</i>\r\n                  </button>\r\n                  &nbsp;&nbsp;\r\n                  <Link to={'/'} className='waves-effect waves-light btn  blue darken-3'>\r\n                    Retornar\r\n                  </Link>\r\n                </DivCenter>\r\n\r\n              </form>\r\n            </DivRow>\r\n          </div>\r\n\r\n          {this.state.aviso !== '' ?\r\n            <div>\r\n              {this.state.aviso}\r\n            </div>\r\n            : ''\r\n          }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport Home from './Home'\nimport Detalhes from './Detalhes'\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Header />\n      <Route path='/' exact component={Home} />\n      <Route path='/detalhes/:id' component={Detalhes} />\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCvH2wmhLLrMtYxeIwvy58lzgdubp9rMlA',\n  authDomain: 'quadrinhos-avenida.firebaseapp.com',\n  databaseURL: 'https://quadrinhos-avenida.firebaseio.com',\n  projectId: 'quadrinhos-avenida',\n  storageBucket: 'quadrinhos-avenida.appspot.com',\n  messagingSenderId: '115883473019',\n  appId: '1:115883473019:web:e98876987d5e8cb3a74ade',\n  measurementId: 'G-PS95K80YXL'\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}